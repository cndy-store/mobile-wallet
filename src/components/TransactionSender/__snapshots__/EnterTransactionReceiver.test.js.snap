// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly with an error 1`] = `
<View>
  <Text
    accessible={true}
    allowFontScaling={true}
    ellipsizeMode="tail"
  >
    Please enter Public Key of Receiver
  </Text>
  <TextInput
    allowFontScaling={true}
    autoCorrect={false}
    onChangeText={[Function]}
    style={
      Object {
        "borderColor": "gray",
        "borderWidth": 1,
        "height": 40,
        "width": 750,
      }
    }
    value=""
  />
  <View
    accessibilityComponentType="button"
    accessibilityLabel={undefined}
    accessibilityTraits={
      Array [
        "button",
      ]
    }
    accessible={true}
    collapsable={undefined}
    hasTVPreferredFocus={undefined}
    hitSlop={undefined}
    isTVSelectable={true}
    nativeID={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "opacity": 1,
      }
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <View
      style={
        Array [
          Object {},
        ]
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        disabled={undefined}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "#007AFF",
              "fontSize": 18,
              "padding": 8,
              "textAlign": "center",
            },
          ]
        }
      >
        Next
      </Text>
    </View>
  </View>
  <Text
    accessible={true}
    allowFontScaling={true}
    ellipsizeMode="tail"
  >
    With an error
  </Text>
</View>
`;

exports[`renders correctly without an error 1`] = `
<View>
  <Text
    accessible={true}
    allowFontScaling={true}
    ellipsizeMode="tail"
  >
    Please enter Public Key of Receiver
  </Text>
  <TextInput
    allowFontScaling={true}
    autoCorrect={false}
    onChangeText={[Function]}
    style={
      Object {
        "borderColor": "gray",
        "borderWidth": 1,
        "height": 40,
        "width": 750,
      }
    }
    value=""
  />
  <View
    accessibilityComponentType="button"
    accessibilityLabel={undefined}
    accessibilityTraits={
      Array [
        "button",
      ]
    }
    accessible={true}
    collapsable={undefined}
    hasTVPreferredFocus={undefined}
    hitSlop={undefined}
    isTVSelectable={true}
    nativeID={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "opacity": 1,
      }
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <View
      style={
        Array [
          Object {},
        ]
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        disabled={undefined}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "#007AFF",
              "fontSize": 18,
              "padding": 8,
              "textAlign": "center",
            },
          ]
        }
      >
        Next
      </Text>
    </View>
  </View>
</View>
`;
