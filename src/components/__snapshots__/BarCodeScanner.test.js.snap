// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<View
  style={
    Object {
      "alignContent": "center",
      "alignItems": "center",
      "flex": 1,
      "height": 1334,
      "justifyContent": "center",
    }
  }
>
  <View
    style={
      Array [
        Object {
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        },
      ]
    }
  >
    <View
      onLayout={[Function]}
    >
      <View
        style={
          Object {
            "backgroundColor": "transparent",
            "borderBottomColor": "transparent",
            "borderBottomWidth": 0.5,
            "elevation": 0,
            "flexDirection": "row",
            "height": 64,
            "justifyContent": "center",
            "left": 0,
            "paddingLeft": 6,
            "paddingRight": 10,
            "paddingTop": 18,
            "right": 0,
            "shadowColor": null,
            "shadowOffset": null,
            "shadowOpacity": null,
            "shadowRadius": null,
            "top": 0,
          }
        }
        transparent={true}
        virtual={undefined}
      >
        <View
          style={
            Object {
              "alignItems": "flex-start",
              "alignSelf": "center",
              "flex": 1,
            }
          }
          virtual={undefined}
        >
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            collapsable={undefined}
            hasTVPreferredFocus={undefined}
            hitSlop={undefined}
            isTVSelectable={true}
            nativeID={undefined}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "alignSelf": null,
                "backgroundColor": "transparent",
                "borderBottomWidth": null,
                "borderColor": null,
                "borderLeftWidth": null,
                "borderRadius": 5,
                "borderRightWidth": null,
                "borderTopWidth": null,
                "elevation": 0,
                "flexDirection": "row",
                "height": 45,
                "justifyContent": "space-between",
                "marginLeft": -3,
                "opacity": 1,
                "paddingBottom": 6,
                "paddingLeft": 4,
                "paddingRight": 6,
                "paddingTop": 6,
                "shadowColor": null,
                "shadowOffset": null,
                "shadowOpacity": null,
                "shadowRadius": null,
              }
            }
            testID={undefined}
            tvParallaxProperties={undefined}
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "backgroundColor": "transparent",
                  "color": "#007aff",
                  "fontFamily": "System",
                  "fontSize": 17,
                  "marginLeft": 0,
                  "marginRight": 0,
                  "paddingLeft": 2,
                  "paddingRight": undefined,
                  "top": 1,
                }
              }
              uppercase={false}
              virtual={undefined}
            >
              Cancel
            </Text>
          </View>
        </View>
        <View
          style={
            Object {
              "alignItems": "center",
              "alignSelf": "center",
              "flex": 1,
            }
          }
          virtual={undefined}
        />
        <View
          style={
            Object {
              "alignItems": "flex-end",
              "alignSelf": "center",
              "flex": 1,
              "flexDirection": "row",
              "justifyContent": "flex-end",
            }
          }
          virtual={undefined}
        />
      </View>
    </View>
  </View>
</View>
`;
