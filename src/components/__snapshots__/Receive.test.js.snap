// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<RCTScrollView
  automaticallyAdjustContentInsets={false}
  contentContainerStyle={
    Array [
      Object {
        "padding": 10,
      },
      undefined,
    ]
  }
  contentInset={
    Object {
      "bottom": 0,
    }
  }
  enableAutomaticScroll={true}
  enableResetScrollToCoords={true}
  extraHeight={75}
  extraScrollHeight={0}
  getScrollResponder={[Function]}
  handleOnScroll={[Function]}
  keyboardDismissMode="interactive"
  keyboardOpeningTime={250}
  keyboardShouldPersistTaps="handled"
  keyboardSpace={0}
  onScroll={[Function]}
  padder={true}
  resetKeyboardSpace={[Function]}
  resetScrollToCoords={
    Object {
      "x": 0,
      "y": 0,
    }
  }
  scrollEventThrottle={1}
  scrollForExtraHeightOnAndroid={[Function]}
  scrollToEnd={[Function]}
  scrollToFocusedInput={[Function]}
  scrollToPosition={[Function]}
  showsVerticalScrollIndicator={true}
  style={
    Object {
      "backgroundColor": "transparent",
      "flex": 1,
    }
  }
  viewIsInsideTabBar={false}
  virtual={undefined}
>
  <View>
    <View
      style={
        Object {
          "backgroundColor": "#fff",
          "borderBottomWidth": 0.5,
          "borderColor": "#ccc",
          "borderLeftWidth": 0.5,
          "borderRadius": 2,
          "borderRightWidth": 0.5,
          "borderTopWidth": 0.5,
          "elevation": 3,
          "flex": 1,
          "flexWrap": "nowrap",
          "marginBottom": 5,
          "marginLeft": 2,
          "marginRight": 2,
          "marginTop": 5,
          "shadowColor": "#000",
          "shadowOffset": Object {
            "height": 2,
            "width": 0,
          },
          "shadowOpacity": 0.1,
          "shadowRadius": 1.5,
        }
      }
      virtual={undefined}
    >
      <View
        cardBody={true}
        onLayout={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#fff",
            "borderRadius": 2,
            "flexDirection": "row",
            "paddingBottom": -5,
            "paddingLeft": -5,
            "paddingRight": -5,
            "paddingTop": -5,
          }
        }
        virtual={undefined}
      />
    </View>
    <View
      style={
        Object {
          "backgroundColor": "#fff",
          "borderBottomWidth": 0.5,
          "borderColor": "#ccc",
          "borderLeftWidth": 0.5,
          "borderRadius": 2,
          "borderRightWidth": 0.5,
          "borderTopWidth": 0.5,
          "elevation": 3,
          "flex": 1,
          "flexWrap": "nowrap",
          "marginBottom": 5,
          "marginLeft": 2,
          "marginRight": 2,
          "marginTop": 5,
          "shadowColor": "#000",
          "shadowOffset": Object {
            "height": 2,
            "width": 0,
          },
          "shadowOpacity": 0.1,
          "shadowRadius": 1.5,
        }
      }
      virtual={undefined}
    >
      <View
        header={true}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#fff",
            "borderBottomWidth": null,
            "borderRadius": 2,
            "flexDirection": "row",
            "paddingBottom": 15,
            "paddingLeft": 15,
            "paddingRight": 15,
            "paddingTop": 15,
          }
        }
        virtual={undefined}
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
        >
          This is your public key: 
          GCHSUHOKNZQAKTULV5YTMG5CKU2NKE7UUQVN6JT2JY7337CRBIAZ6LXK
        </Text>
      </View>
    </View>
  </View>
</RCTScrollView>
`;
